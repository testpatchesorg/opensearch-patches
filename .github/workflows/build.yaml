---
name: Build patched OpenSearch
on:
  workflow_dispatch:
    inputs:
      open-search-tag:
        type: string
        required: true
        description: "Tag in the opensearch-project/OpenSearch repository"
        default: "3.0.0"
      patches-dir:
        type: string
        description: "Direcory in this repository with patches"
        required: true
        default: "patches/3.0.0"
      tags:
        type: string
        description: "Comma separated list of tags to tag produced docker image"
        required: false
        default: "custom-patches-3.0.0"
      trigger-qubership-opensearch-build:
        type: boolean
        description: "Trigger qubership-opensearch build"
        default: true
        required: false
permissions:
  contents: read
jobs:
  build:
    permissions:
      contents: read
      packages: write
    name: "Apply patches & build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout OpenSearch"
        uses: actions/checkout@v5
        with:
          repository: opensearch-project/opensearch
          ref: ${{ inputs.open-search-tag }}
      - name: "Checkout this repository"
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref }}
          path: opensearch-custom-patches
      - name: "Apply patches"
        run: |
          cd ${GITHUB_WORKSPACE}
          for p in ./opensearch-custom-patches/${{ inputs.patches-dir }}/*.patch; do
            echo "Applying $pâ€¦"
            git apply -p1 --ignore-space-change --ignore-whitespace "$p"
          done
          rm -rf ./opensearch-custom-patches

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: "Run gradlew :distribution:docker:build"
        run: |
          ./gradlew :distribution:docker:build
      - name: "Login to ghcr.io"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "List built images and add tags"
        run: |
          docker images | grep opensearch
          export OWNER=${GITHUB_REPOSITORY_OWNER,,}
          DEFAULT_CUSTOM_TAG=ghcr.io/${OWNER}/opensearch:${{ inputs.open-search-tag }}-custom
          docker tag opensearch:test ${DEFAULT_CUSTOM_TAG}
          echo "Pushing opensearch image with default custom tag: ${DEFAULT_CUSTOM_TAG}"
          docker push ${DEFAULT_CUSTOM_TAG}
          echo "DEFAULT_CUSTOM_TAG=${DEFAULT_CUSTOM_TAG}" >> "$GITHUB_ENV"
          if [[ "${{ inputs.tags }}" != "" ]]; then
            CLEAN_TAGS=$(echo "${{ inputs.tags }}" | tr -d ' ')
            IFS=',' read -ra TAGS <<< "${CLEAN_TAGS}"

            for t in "${TAGS[@]}"
            do
              INPUTS_TAG=ghcr.io/${OWNER}/opensearch:${t,,}
              docker tag opensearch:test ${INPUTS_TAG}
              echo "Pushing opensearch image with custom tag: ${INPUTS_TAG}"
              docker push ${INPUTS_TAG}
            done
          fi
      - name: "Trigger ${{ github.event.repository.name }}/qubership-opensearch build"
        if: ${{ inputs.trigger-qubership-opensearch-build }}
        uses: netcracker/qubership-workflow-hub/actions/custom-event@v2.0.1
        with:
          github-token: ${{ secrets.GH_ACCESS_TOKEN }}
          owner: ${{ github.repository_owner }}
          repo: qubership-opensearch
          event-type: opensearch-patched-build
          client-payload: '{"custom_opensearch_version": "${{ env.DEFAULT_CUSTOM_TAG }}"}'
